services:
    laravel.test:
        build:
            context: './docker/8.4'
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: 'sail-8.4/app'
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-80}:80'
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            - pgsql
            - redis
            - mailpit
            - mongodb
    pgsql:
        image: 'postgres:17-alpine'
        ports:
            - '${FORWARD_DB_PORT:-5432}:5432'
        environment:
            PGPASSWORD: '${DB_PASSWORD:-secret}'
            POSTGRES_DB: '${DB_DATABASE}'
            POSTGRES_USER: '${DB_USERNAME}'
            POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
        volumes:
            - 'sail-pgsql:/var/lib/postgresql/data'
            - './docker/pgsql/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - pg_isready
                - '-q'
                - '-d'
                - '${DB_DATABASE}'
                - '-U'
                - '${DB_USERNAME}'
            retries: 3
            timeout: 5s

    mongodb:
        image: mongo:7-jammy
        ports:
            - "${FORWARD_MONGODB_PORT:-27017}:27017"
        environment:
            MONGO_INITDB_ROOT_USERNAME: "${MONGO_INITDB_ROOT_USERNAME}"
            MONGO_INITDB_ROOT_PASSWORD: "${MONGO_INITDB_ROOT_PASSWORD}"
            MONGO_INITDB_DATABASE: "${MONGO_INITDB_DATABASE}"
        volumes:
            - "sail-mongo:/data/db"
        networks: [ sail ]
        healthcheck:
            # usa host/porta/db e authSource do .env
            test: [ "CMD", "mongosh", "--quiet", "mongodb://${MONGODB_HOST}:${MONGODB_PORT}/${MONGODB_AUTH_SOURCE}", "--eval", "db.runCommand({ ping: 1 })" ]
            interval: 10s
            timeout: 5s
            retries: 5

    mongo-express:
        image: mongo-express:latest
        depends_on: [ mongodb ]
        ports:
            - "${FORWARD_MONGO_EXPRESS_PORT:-8081}:8081"
        environment:
            ME_CONFIG_MONGODB_URL: "${MONGODB_URL}"
            ME_CONFIG_BASICAUTH_USERNAME: "${ME_CONFIG_BASICAUTH_USERNAME}"
            ME_CONFIG_BASICAUTH_PASSWORD: "${ME_CONFIG_BASICAUTH_PASSWORD}"
        networks: [ sail ]

    redis:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'sail-redis:/data'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s
    mailpit:
        image: 'axllent/mailpit:latest'
        ports:
            - '${FORWARD_MAILPIT_PORT:-1025}:1025'
            - '${FORWARD_MAILPIT_DASHBOARD_PORT:-8025}:8025'
        networks:
            - sail

    rabbitmq:
        image: heidiks/rabbitmq-delayed-message-exchange:3.13.3-management
        container_name: ${APP_NAME:-laravel}-rabbitmq-1
        ports:
            - "${FORWARD_RABBITMQ_PORT:-5672}:5672"
            - "${FORWARD_RABBITMQ_MANAGEMENT_PORT:-15672}:15672"
        environment:
            RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER:-guest}
            RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS:-guest}
        networks:
            - sail
networks:
    sail:
        driver: bridge
volumes:
    sail-pgsql:
        driver: local
    sail-mongo:
        driver: local
    sail-redis:
        driver: local
